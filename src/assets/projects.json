[
    {
        "id": "cast",
        "name": "Cast",
        "timeRange": "2020-Present",
        "description": "A podcast web app that allows you to manage your podcast subscriptions and bookmarks with an intuitive, well-organised interface.\n\nIt uses the Node.js runtime with the Express framework for its backend API service.\n\nThe initial version of Cast used my own custom frontend library, Cardo. However I have since started work on a version of the frontend that uses the Vue.js framework, just like this site.",
        "imgUrl": "cast.png",
        "url": "",
        "github": ""
    },
    {
        "id": "biscuitwm",
        "name": "BiscuitWM",
        "timeRange": "2020",
        "description": "A minimalist X11 window manager for Linux/Unix systems written in Python. Largely an experimental effort.",
        "imgUrl": "biscuitwm.png",
        "url": "https://csiew.github.io/BiscuitWM",
        "github": "https://github.com/csiew/BiscuitWM"
    },
    {
        "id": "podzol",
        "name": "Podzol",
        "timeRange": "2020",
        "description": "A podcast web app that lives in your terminal. It stores indexes of your podcast subscriptions and episode data in JSON files. It's written in Python and uses the pygame library for audio streaming functionality. Limitations with pygame and cross-platform compatibiltiy (Linux and macOS) led me to start working on a web-based podcast client (which was initially codenamed Podzol).",
        "imgUrl": "",
        "url": "",
        "github": "https://github.com/csiew/podzol"
    },
    {
        "id": "evacuation",
        "name": "Evacuation System",
        "timeRange": "2019",
        "description": "For my Final Year Project at university, my project group worked with a client to design and build a system that enables institutions to analyse and determine the effectiveness of emergency evacuations through KPIs.\n\nThis system was comprised of a backend API service (using the Spring Framework and PostgreSQL for its database), a web-based frontend for admins (using React), and a mobile application (using React Native). We also worked with the OpenStreetMap API and libraries such as Material UI and Leaflet (for map overlays).\n\nI was the group's co-software architect, and was through this I was largely responsible for the architecture of the backend and web-based frontend (as well as managing the group's AWS EC2 instances).",
        "imgUrl": "evacuation.png",
        "url": "",
        "github": ""
    },
    {
        "id": "transitsafe",
        "name": "TransitSafe",
        "timeRange": "2017-2019",
        "description": "An app and service that lets commuters report incidents (crime, hygiene, medical emergencies, etc) on public transport. It used the Public Transport Victoria APIs to get data on public transport services and station metadata.",
        "imgUrl": "ptr.png",
        "url": "",
        "github": ""
    },
    {
        "id": "antorcalinux",
        "name": "Antorca Linux",
        "timeRange": "2017-2019",
        "description": "A Debian-based Linux distribution designed for a simple out of the box experience. Ideal for Windows users transitioning to Linux. It used the Xfce desktop environment.",
        "imgUrl": "antorca_linux.png",
        "url": "https://antorca.github.io/linux/",
        "github": ""
    },
    {
        "id": "illumeos",
        "name": "illume OS",
        "timeRange": "2011-2017",
        "description": "A lightweight Debian-based Linux distribution designed for old hardware (e.g. 32-bit x86 PCs). It used IceWM as its window manager in version 1.x, before transitioning to the LXDE desktop environment from version 2.x onwards.",
        "imgUrl": "",
        "url": "https://illume-os.firebaseapp.com/",
        "github": ""
    }
]